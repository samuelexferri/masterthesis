{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610232806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632fbebd3814610046578063919840ad14610059578063b658f2a214610061575b600080fd5b61005761005436600461019b565b50565b005b610057610069565b6100576100ff565b6040805161010081018252600880825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526002600360005b818110156100f9576100e9846100c783866101b3565b600881106100e557634e487b7160e01b600052603260045260246000fd5b5050565b6100f2816101cb565b90506100b1565b50505050565b6040805161010081018252600880825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290529060029060039061015082846101b3565b111561015b57600080fd5b60005b818110156100f95761018b84828501600881106100e557634e487b7160e01b600052603260045260246000fd5b610194816101cb565b905061015e565b6000602082840312156101ac578081fd5b5035919050565b600082198211156101c6576101c66101e6565b500190565b60006000198214156101df576101df6101e6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e27b5f09a045b125ec90229bf631c14d5de893d0f47f462e770e8c88138ec05764736f6c63430008020033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FBEBD38 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x919840AD EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0xB658F2A2 EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57 PUSH2 0x69 JUMP JUMPDEST PUSH2 0x57 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH2 0xE9 DUP5 PUSH2 0xC7 DUP4 DUP7 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0xE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF2 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 POP PUSH2 0xB1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x150 DUP3 DUP5 PUSH2 0x1B3 JUMP JUMPDEST GT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH2 0x18B DUP5 DUP3 DUP6 ADD PUSH1 0x8 DUP2 LT PUSH2 0xE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x194 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 POP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C6 JUMPI PUSH2 0x1C6 PUSH2 0x1E6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DF PUSH2 0x1E6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH28 0x5F09A045B125EC90229BF631C14D5DE893D0F47F462E770E8C88138E 0xC0 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
			"sourceMap": "66:637:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:611:1",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:1",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "84:120:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "130:26:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "139:6:1"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "147:6:1"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "132:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "132:22:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "132:22:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "105:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "114:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "101:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "101:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "126:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "97:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "97:32:1"
											},
											"nodeType": "YulIf",
											"src": "94:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "165:33:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "188:9:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "175:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "175:23:1"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "165:6:1"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "50:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "61:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "73:6:1",
										"type": ""
									}
								],
								"src": "14:190:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "257:80:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "284:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "286:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "286:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "286:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "273:1:1"
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "280:1:1"
															}
														],
														"functionName": {
															"name": "not",
															"nodeType": "YulIdentifier",
															"src": "276:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "276:6:1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "270:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "270:13:1"
											},
											"nodeType": "YulIf",
											"src": "267:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "315:16:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "326:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "329:1:1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "322:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "322:9:1"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "315:3:1"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "240:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "243:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "249:3:1",
										"type": ""
									}
								],
								"src": "209:128:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "389:88:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "420:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "422:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "422:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "422:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "405:5:1"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "416:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "not",
															"nodeType": "YulIdentifier",
															"src": "412:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "412:6:1"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "402:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "402:17:1"
											},
											"nodeType": "YulIf",
											"src": "399:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "451:20:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "462:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "469:1:1",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "458:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "458:13:1"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "451:3:1"
												}
											]
										}
									]
								},
								"name": "increment_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "371:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "381:3:1",
										"type": ""
									}
								],
								"src": "342:135:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "514:95:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "531:1:1",
														"type": "",
														"value": "0"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "538:3:1",
																"type": "",
																"value": "224"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "543:10:1",
																"type": "",
																"value": "0x4e487b71"
															}
														],
														"functionName": {
															"name": "shl",
															"nodeType": "YulIdentifier",
															"src": "534:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "534:20:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "524:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "524:31:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "524:31:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "571:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "574:4:1",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "564:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "564:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "564:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "595:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "598:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "588:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "588:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "588:15:1"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "482:127:1"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632fbebd3814610046578063919840ad14610059578063b658f2a214610061575b600080fd5b61005761005436600461019b565b50565b005b610057610069565b6100576100ff565b6040805161010081018252600880825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526002600360005b818110156100f9576100e9846100c783866101b3565b600881106100e557634e487b7160e01b600052603260045260246000fd5b5050565b6100f2816101cb565b90506100b1565b50505050565b6040805161010081018252600880825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290529060029060039061015082846101b3565b111561015b57600080fd5b60005b818110156100f95761018b84828501600881106100e557634e487b7160e01b600052603260045260246000fd5b610194816101cb565b905061015e565b6000602082840312156101ac578081fd5b5035919050565b600082198211156101c6576101c66101e6565b500190565b60006000198214156101df576101df6101e6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e27b5f09a045b125ec90229bf631c14d5de893d0f47f462e770e8c88138ec05764736f6c63430008020033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FBEBD38 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x919840AD EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0xB658F2A2 EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57 PUSH2 0x69 JUMP JUMPDEST PUSH2 0x57 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH2 0xE9 DUP5 PUSH2 0xC7 DUP4 DUP7 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0xE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF2 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 POP PUSH2 0xB1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x150 DUP3 DUP5 PUSH2 0x1B3 JUMP JUMPDEST GT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH2 0x18B DUP5 DUP3 DUP6 ADD PUSH1 0x8 DUP2 LT PUSH2 0xE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x194 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 POP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C6 JUMPI PUSH2 0x1C6 PUSH2 0x1E6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DF PUSH2 0x1E6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH28 0x5F09A045B125EC90229BF631C14D5DE893D0F47F462E770E8C88138E 0xC0 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
			"sourceMap": "66:637:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:35;;;;;;:::i;:::-;;;;;96:229;;;:::i;331:325::-;;;:::i;96:229::-;130:41;;;;;;;;155:1;130:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:1;217;130:21;237:82;258:4;254:1;:8;237:82;;;287:21;291:5;297:9;305:1;297:5;:9;:::i;:::-;291:16;;;;;-1:-1:-1;;;291:16:0;;;;;;;;;-1:-1:-1;;666:35:0;287:21;264:3;;;:::i;:::-;;;237:82;;;;96:229;;;:::o;331:325::-;367:41;;;;;;;;392:1;367:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:1;;454;;482:12;454:1;431;482:12;:::i;:::-;:28;;474:37;;;;;;535:6;530:120;551:4;547:1;:8;530:120;;;604:21;608:5;622:1;614:5;:9;608:16;;;;;-1:-1:-1;;;608:16:0;;;;;;;;604:21;557:3;;;:::i;:::-;;;530:120;;14:190:1;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:1;;84:120;-1:-1:-1;84:120:1:o;209:128::-;;280:1;276:6;273:1;270:13;267:2;;;286:18;;:::i;:::-;-1:-1:-1;322:9:1;;257:80::o;342:135::-;;-1:-1:-1;;402:17:1;;399:2;;;422:18;;:::i;:::-;-1:-1:-1;469:1:1;458:13;;389:88::o;482:127::-;543:10;538:3;534:20;531:1;524:31;574:4;571:1;564:15;598:4;595:1;588:15"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "112400",
				"executionCost": "159",
				"totalCost": "112559"
			},
			"external": {
				"check()": "infinite",
				"foo(uint256)": "189",
				"uncheck()": "infinite"
			}
		},
		"methodIdentifiers": {
			"check()": "919840ad",
			"foo(uint256)": "2fbebd38",
			"uncheck()": "b658f2a2"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "check",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "x",
					"type": "uint256"
				}
			],
			"name": "foo",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "uncheck",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}